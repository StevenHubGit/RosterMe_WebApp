#pragma checksum "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1fa47474cbf3f247add107a879c1cd2d3cdec9fe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_ManagerDashboard), @"mvc.1.0.view", @"/Views/Dashboard/ManagerDashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\_ViewImports.cshtml"
using RosterMe;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\_ViewImports.cshtml"
using RosterMe.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1fa47474cbf3f247add107a879c1cd2d3cdec9fe", @"/Views/Dashboard/ManagerDashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f4cd2d045325c83806bc54ffa3f83795d8f7c416", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_ManagerDashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RosterMe.Models.Dashboard>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "~/Views/PartialViews/_UserProfileLayout.cshtml", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!-- model RosterMe.Models.Dashboard -->\r\n");
#nullable restore
#line 3 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
  
    //Display Home Layout
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

    //Set tab title
    ViewData["Title"] = "Dashboard";

    //Store employee details as Model
    List<RosterMe.Models.Entities.Employee> employeeDetailsModel = 
        (List<RosterMe.Models.Entities.Employee>) ViewData["EmployeeDetails"];
    
    //Store employee booked shifts as Model
    List<RosterMe.Models.Entities.BookedShifts> employeeBookedShifts =
        (List<RosterMe.Models.Entities.BookedShifts>) ViewData["EmployeeBookedShifts"];
    
    //Store employee availabilities as Model
    List<RosterMe.Models.Entities.Availability> employeeAvailabilities =
        (List<RosterMe.Models.Entities.Availability>) ViewData["EmployeeAvailabilities"];

    //
    String position = "";

    //
    if (employeeDetailsModel != null)
    {
        /*
        <p>
            There are data in Employee Details model
            @for(int i = 0; i < employeeDetailsModel.Count; i++)
            {
                @employeeDetailsModel[i].FirstName
            }
        </p>
        */
    }
    else
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <p>\r\n            No data in Employee Details Model\r\n        </p>\r\n");
#nullable restore
#line 43 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- #### User Details #### -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1fa47474cbf3f247add107a879c1cd2d3cdec9fe5733", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<!-- ##### Employees Under Manager Sections #### -->
<section class=""section-padding gray-bg"">
    <div class=""row"">
        <!-- #### Section: Employees' Booked Shifts #### -->
        <div id=""column"">
            <h2>
                Confirmed Bookings
            </h2>
            <table class=""managerEmployeesDataTable"">
                <thead");
            BeginWriteAttribute("class", " class=\"", 1759, "\"", 1767, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <tr>
                        <th>
                            Employees
                        </th>
                        <th>
                            Shift
                        </th>
                    </tr>
                </thead>
                <tbody");
            BeginWriteAttribute("class", " class=\"", 2068, "\"", 2076, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 69 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                     for(int i = 0; i < employeeBookedShifts.Count(); i++)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\r\n                            <td>\r\n                                ");
#nullable restore
#line 73 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                           Write(employeeBookedShifts[i].Employee.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" \r\n                                ");
#nullable restore
#line 74 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                           Write(employeeBookedShifts[i].Employee.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </td>\r\n                            <td>\r\n                                ");
#nullable restore
#line 77 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                           Write(employeeBookedShifts[i].BookedTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n");
#nullable restore
#line 80 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n        <!-- #### Section: Employees\' Availabilities #### -->\r\n        <div id=\"column\">\r\n            <h2>\r\n                Week\'s Availabilities\r\n            </h2>\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1fa47474cbf3f247add107a879c1cd2d3cdec9fe10014", async() => {
                WriteLiteral("\r\n                <table class=\"managerEmployeesDataTable\" id=\"employeeInvitation\">\r\n                    <thead");
                BeginWriteAttribute("class", " class=\"", 2983, "\"", 2991, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                        <tr>
                            <th>
                                Employees
                            </th>
                            <th>
                                Date
                            </th>
                            <th>
                                Available Date
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody");
                BeginWriteAttribute("class", " class=\"", 3519, "\"", 3527, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
#nullable restore
#line 108 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                         for (int i = 0; i < employeeAvailabilities.Count(); i++)
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <tr>\r\n                                <td>\r\n                                    ");
#nullable restore
#line 112 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                               Write(employeeAvailabilities[i].Employee.FirstName);

#line default
#line hidden
#nullable disable
                WriteLiteral(" \r\n                                    ");
#nullable restore
#line 113 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                               Write(employeeAvailabilities[i].Employee.LastName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                </td>
                                <td>
                                    <input type=""time"" name=""EmployeeInviteDate""/>
                                </td>
                                <td>
                                    ");
#nullable restore
#line 119 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                               Write(employeeAvailabilities[i].AvailableDate);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                </td>
                                <td>
                                    <input type=""button"" name=""InviteEmployeeButton""
                                           value=""Invite""
                                           class=""inviteEmployee""");
                BeginWriteAttribute("onclick", "\r\n                                           onclick=\"", 4482, "\"", 4646, 5);
                WriteAttributeValue("", 4536, "EmployeeInvitation", 4536, 18, true);
                WriteAttributeValue("\r\n                                            ", 4554, "(", 4600, 47, true);
#nullable restore
#line 126 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
WriteAttributeValue("", 4601, employeeAvailabilities[i].EmployeeId, 4601, 37, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4638, ",", 4638, 1, true);
                WriteAttributeValue(" ", 4639, "event)", 4640, 7, true);
                EndWriteAttribute();
                WriteLiteral("/>\r\n                                </td>\r\n                            </tr>\r\n");
#nullable restore
#line 129 "C:\Users\Aspire2 Student\Desktop\Projects\Assigments\Web Programming\RosterMe_WebApp\RosterMe\RosterMe\Views\Dashboard\ManagerDashboard.cshtml"
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </tbody>\r\n                </table>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
    </div>
</section>
<!-- End: Shifts -->
<script type=""text/javascript"">
    /* ---- JQuery & Ajax function: Retrieve employee ID and redirect to view ---- */
    function EmployeeInvitation(empID, event)
    {
        /**
         * Definition and Usage
         * The preventDefault() method cancels the event if it is cancelable, meaning that the default 
         * action that belongs to the event will not occur.
         * 
         * For example, this can be useful when:
         * - Clicking on a ""Submit"" button, prevent it from submitting a form
         * - Clicking on a link, prevent the link from following the URL
         * 
         * Note: Not all events are cancelable. Use the cancelable property to find out if an event is 
         * cancelable.
         * Note: The preventDefault() method does not prevent further propagation of an event through the DOM. 
         * Use the stopPropagation() method to handle this.
         * */
        event.preventDefaul");
            WriteLiteral(@"t();

        //Check if input employee ID is null
        if (empID != null)
        {
            /**
             * Javascript Try/Catch/Finally syntax:
             * try 
             * {
             *      tryCode - Block of code to try
             * }
             * catch(err) 
             * {
             *      catchCode - Block of code to handle errors
             * }
             * finally 
             * {
             *      finallyCode - Block of code to be executed regardless of the try / catch result
             * }
             * */
            try
            {
                //Store input
                var empId = empID;

                //Define & store URL to Action in Controller
                var action = 'Url.Action(""InviteEmployeeToShift"")';
                var controllerAction = 'Url.Action(""InviteEmployeeToShift"", ""Dashboard"")';
                var urlWithVariable = ""/Dashboard/InviteEmployeeToShift"";
                var urlToAction = urlWithVar");
            WriteLiteral(@"iable;

                //Display message
                alert(""Alright !"" +
                    ""\nThe Employee Invitation JQuery method is reached"" +
                    ""\nInformation to pass in Ajax"" +
                    ""\n- URL: "" + urlToAction +
                    ""\n- Data: "" + empId
                );

                //Use Ajax to Post stored employee ID
                $.ajax
                ({
                    /**
                     * URL: (Default: The current page)
                     * Type: String
                     * A string containing the URL to which the request is sent.
                     * */
                    url: urlToAction + ""?employeeID="" + empId,
                    //url: urlToAction,
                    //url: urlToAction + ""/"" + empId,

                    /**
                     * Data: 
                     * Type: PlainObject or String or Array
                     * Data to be sent to the server. It is converted to a query string, if ");
            WriteLiteral(@"not 
                     * already a string.
                     * */
                    data: { employeeID: empId },

                    /**
                     * Async: (Default: true)
                     * Type: Boolean
                     * By default, all requests are sent asynchronously 
                     * (i.e. this is set to true by default).
                     * */
                    async: false,

                    /**
                     * Cache: (Default: true, false for dataType 'script' and 'jsonp')
                     * Type: Boolean
                     * If set to false, it will force requested pages not to be cached by the browser. 
                     * 
                     * Note: Setting cache to false will only work correctly with HEAD and GET requests.
                     * */
                    cache: true,

                    /**
                     * Content Type: (Default: 'application/x-www-form-urlencoded; charset=UTF-8')
           ");
            WriteLiteral(@"          * Type: Boolean or String
                     * When sending data to the server, use this content type. 
                     * Default is ""application/x-www-form-urlencoded; charset=UTF-8"", which is fine 
                     * for most cases. 
                     * 
                     * If you explicitly pass in a content-type to $.ajax(), then it is always sent 
                     * to the server (even if no data is sent).
                     * */
                    contentType: ""application/json; charset=utf-8"",

                    /**
                     * Type: (Default: 'GET')
                     * Type: String
                     * A set of key/value pairs that configure the Ajax request. 
                     * All settings are optional.
                     * */
                    type: 'POST',

                    /**
                     * Accepts: (Default: depends on dataType)
                     * Type: PlainObject
                     * A set of key");
            WriteLiteral(@"/value pairs that map a given dataType to its MIME type, 
                     * which gets sent in the Accept request header. 
                     * 
                     * This header tells the server what kind of response it will accept in return
                     * */
                    accepts: ""application/json"",

                    /**
                     * Traditional:
                     * Type: Boolean
                     * Set this to true if you wish to use the traditional style of param serialization
                     * */
                    traditional: true,

                    //Set action on succes
                    success: function (response)
                    {
                        //Display message
                        alert(""Alright !"" +
                            ""\nThe POST is a success"" +
                            ""\n- Input data: "" + empId +
                            ""\n- Data to pass: "" + response.data
                        );

");
            WriteLiteral(@"                        //Check if data to pass is not null
                        if (response != null && response.result == 'Redirect')
                        {
                            //Print message
                            console.log(""Manager Dashboard View message: Invite employee"" +
                                ""\nThe employee ID to pass is not null"" +
                                ""\n- Employee ID: "" + empId
                            );

                            //Display message
                            alert(""Okay !"" +
                                ""\nThe data to pass is not null"" +
                                ""\n- Data: "" + response.data +
                                ""\n- Employee ID: "" + empId +
                                ""\n\nRedirection to URL"" +
                                ""\n- URL: "" + response.url
                            );

                            //Redirect to page
                            //location.href = urlToAction ");
            WriteLiteral(@"+ ""?employeeID="" + empId;
                            window.location = response.url;
                        }
                    },
                    failure: function (response)
                    {
                        //Display message
                        alert(""Error !"" +
                            ""\nAn error occurred while trying to Post employee ID to invite"" +
                            ""\n- Casue: "" + response + ""\n""
                        );
                    }
                });
            }
            catch (error)
            {
                //Print message
                console.log(""Error !"" +
                    ""\nAn error occurred while trying to POST employee to invite"" +
                    ""\n- Cause: "" + error.message
                );
            }
        }
        else
        {
            //Display message
            alert(""Wait !"" +
                ""\nThe input employee ID is null""
            );
        }
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RosterMe.Models.Dashboard> Html { get; private set; }
    }
}
#pragma warning restore 1591
